name: Blender Render  # Workflow name

on:
  push:  # ‚úÖ Runs on every commit to any branch
  workflow_dispatch:  # ‚úÖ Allows manual triggering too

jobs:
  render-blender:
    runs-on: ubuntu-latest
    steps:

      # 1Ô∏è‚É£ Step: Checkout the Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Step: Install System Dependencies
      - name: Install System Dependencies
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip libegl1 ffmpeg

      # 3Ô∏è‚É£ Step: Install Blender
      - name: Install Blender
        run: |
          wget https://download.blender.org/release/Blender4.4/blender-4.4.3-linux-x64.tar.xz
          tar -xvf blender-4.4.3-linux-x64.tar.xz
          mv blender-4.4.3-linux-x64 ~/blender
          sudo ln -s ~/blender/blender /usr/local/bin/blender

      # 4Ô∏è‚É£ Step: Verify Blender Installation
      - name: Check Blender Installation
        run: |
          ls -l ~/blender
          ~/blender/blender --version || echo "‚ùå Blender is NOT installed!"

      # 5Ô∏è‚É£ Step: Debug Blender Path
      - name: Debug Blender Path
        run: |
          which blender || echo "‚ùå Blender path is NOT found!"

      # 6Ô∏è‚É£ Step: Detect Velocity Data File in `testing-input-output/`
      - name: Detect Velocity Data File
        run: |
          if [ -f testing-input-output/velocity_data.json ]; then
            echo "‚úÖ Found `velocity_data.json` in `testing-input-output/`."
          else
            echo "‚ö†Ô∏è WARNING: No `velocity_data.json` found in `testing-input-output/`. Fluid simulation may not run correctly!"
          fi

      # 7Ô∏è‚É£ Step: Search for Any `.blend` File in `testing-input-output/`
      - name: Detect Any `.blend` File
        run: |
          BLEND_FILE=$(ls testing-input-output/*.blend | head -n 1 || echo "")
          if [ -z "$BLEND_FILE" ]; then
            echo "‚ö†Ô∏è WARNING: No `.blend` file found in directory. Simulation will not run!"
          else
            echo "‚úÖ Found `.blend` file: $BLEND_FILE"
            echo "BLEND_FILE=$BLEND_FILE" >> $GITHUB_ENV
          fi

      # 8Ô∏è‚É£ Step: Run Fluid Simulation with Velocity Data
      - name: Run Fluid Simulation
        run: |
          if [ -n "$BLEND_FILE" ] && [ -f testing-input-output/velocity_data.json ]; then
            ~/blender/blender -b --python fluid_simulation.py -- "$BLEND_FILE" --velocity_data testing-input-output/velocity_data.json
          else
            echo "‚ö†Ô∏è SKIPPED: Missing `.blend` or `velocity_data.json`, skipping simulation."
          fi

      # üîü Step: Verify `.blend` File Creation in `testing-input-output/`
      - name: Verify `.blend` File Creation
        run: |
          ls -l ./testing-input-output/ || echo "‚ö†Ô∏è WARNING: No `.blend` file was created."

      # üîü Step: Commit and Push `.blend` File to Repository (Only If It Exists)
      - name: Commit and Push `.blend` File
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          git config --global user.name "$GIT_USER_NAME"
          git config --global user.email "$GIT_USER_EMAIL"

          if ls testing-input-output/*.blend 1> /dev/null 2>&1; then
            git add testing-input-output/*.blend
            git status
            git diff --cached --quiet && echo "‚úÖ No changes to commit!" || git commit -m "Auto-update: Added latest fluid simulation .blend file"
            git push origin HEAD
          else
            echo "‚ö†Ô∏è SKIPPED: No `.blend` file detected, skipping commit."
          fi
