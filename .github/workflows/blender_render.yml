name: Blender Render  # Workflow name

on:
  push:  # ✅ Runs on every commit to any branch
  workflow_dispatch:  # ✅ Allows manual triggering too

jobs:
  render-blender:
    runs-on: ubuntu-latest
    steps:

      # ✅ Step: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # ✅ Step: Set Blender Scene File Path in Environment
      - name: Set Blender File Path
        run: echo "BLEND_FILE=${{ github.workspace }}/data/testing-input-output/fluid_simulation.blend" >> $GITHUB_ENV

      # ✅ Step: Install System Dependencies & Blender
      - name: Install Dependencies & Blender
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip libegl1 ffmpeg
          wget https://download.blender.org/release/Blender4.4/blender-4.4.3-linux-x64.tar.xz
          tar -xvf blender-4.4.3-linux-x64.tar.xz
          mv blender-4.4.3-linux-x64 ~/blender
          sudo ln -s ~/blender/blender /usr/local/bin/blender

      # ✅ Step: Install Python Dependencies
      - name: Install Python Dependencies
        run: pip install dropbox requests opencv-python numpy jsonschema scikit-image

      # ✅ Step: Debug - List Essential Directories
      - name: Debug - Verify Key Directories
        run: |
          echo "🔍 Listing repository root:"
          ls -lah $GITHUB_WORKSPACE/
          echo "🔍 Listing contents of src/:"
          ls -lah src/
          echo "🔍 Listing contents of data/:"
          ls -lah data/

      # ✅ Step: Ensure Required Directories Exist
      - name: Ensure Required Directories Exist
        run: |
          mkdir -p RenderedOutput data/testing-input-output
          echo "✅ RenderedOutput and data/testing-input-output created."

      # ✅ Step: Verify Blender Scene File Presence **Before Execution**
      - name: Verify Blender Scene File Presence
        run: ls -lah ${{ env.BLEND_FILE }}

      # ✅ Step: Check Required Files Before Execution
      - name: Check Required Files Before Execution
        run: |
          if [ ! -f "${{ env.BLEND_FILE }}" ]; then
            echo "❌ Blender scene file missing!"
            exit 1
          fi

      # ✅ Step: Debug - List Contents of `RenderedOutput/` Before Rendering
      - name: Debug - List Contents of `RenderedOutput/` Before Rendering
        run: ls -lah RenderedOutput/

      # ✅ Step: Run Blender Rendering & Verify Output
      - name: Run Blender Rendering & Verify Output
        run: |
          cd src && python3 main.py
          echo "🔍 Checking RenderedOutput/:"
          ls -lah RenderedOutput/
          echo "🔍 Checking generated frames:"
          ls -lah RenderedOutput/ | grep 'frame_' || echo "❌ No frames found!"

      # ✅ Step: Create Video from Rendered Frames
      - name: Create Video
        run: |
          chmod +x src/create_video.sh
          ./src/create_video.sh
          mv ./RenderedOutput/video.mp4 ./data/testing-input-output/video.mp4

      # ✅ Step: Debug - Verify Video Output
      - name: Debug - Verify `video.mp4`
        run: |
          if [ -f data/testing-input-output/video.mp4 ]; then
            echo "✅ Video file generated successfully."
          else
            echo "❌ ERROR: No video.mp4 file detected!"
            exit 1
          fi

      # ✅ Step: Run Unit & Integration Tests
      - name: Run Tests
        run: |
          pytest tests/test_input_validation.py --verbose
          pytest tests/test_output_validation.py --verbose
          pytest tests/test_blender_render.py --verbose
          pytest tests/test_video_analysis.py --verbose
          pytest tests/test_turbulence_validation.py --verbose
          pytest tests/test_video_comparison.py --verbose

      # ✅ Step: Commit & Push Output
      - name: Commit and Push Simulation Output
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          git config --global user.name "$GIT_USER_NAME"
          git config --global user.email "$GIT_USER_EMAIL"
          git add data/testing-input-output/
          git status
          git diff --cached --quiet && echo "✅ No changes to commit!" || git commit -m "Auto-update: Added fluid_dynamics_animation.json and video"
          git push origin HEAD
